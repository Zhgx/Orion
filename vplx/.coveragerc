[run]
omit =
    commands/*
	test/*
	 */__init__.py
	*/test_cover.py
	vplx_app/*
	vtel.py
	daemon.py
	process.py
	test.py
	conftest.py
	consts.py

[report]
exclude_lines =
    class RollBack*
    def rollback*
    def rb_*
    elif status == 'NOT_STARTED':
    elif status == 'NETWORK_ERROR':
    def restore
    def refresh
    def deco*
    raise TimeoutError*
	p.terminate()*
	def decorate*
    except Exception as e:
    except Exception*
    except IndexErrorï¼š
    def get_answer*
    def handle_exception*
    def confirm_modify*
    s.handle_exception()
    except TimeoutError:
    if RPL == 'yes':
    if not answer in ['y', 'yes', 'Y', 'YES']:
    s.prt_log(f"SUCCESS\n{result['rst']}", 1)
    raise consts.ReplayExit*
    except consts.ReplayExit:
    if not isFileExists(LOG_PATH+LOG_FILE_NAME):
    except IndexError*
    s.prt_log('Error, please check whether LINSTOR is normal.', 2)
    pass





